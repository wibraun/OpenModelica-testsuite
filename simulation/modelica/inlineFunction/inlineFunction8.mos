// name: inlineFunction8
// status: correct

loadString("
model foo

  function f1
    input Real y;
    output Real x;
  protected
    Real y1 = 2*y + 7;
    Real z = 2*y1;
  algorithm
    x := sqrt(z*z*y1*y)/10/y1;
    annotation(Inline=true); 
  end f1;

  Real y(start=0,fixed=true);
  Real z =  cos(time);
equation
 der(y) + 1 = f1(z);
end foo;
");
getErrorString();
setCommandLineOptions("+d=dumpBackendInline");
simulate(foo);
getErrorString();
val(time,{0,0.5,1.0});
val(y,{0,0.5,1.0});
// Result:
// true
// ""
// true
//
// ############ BackendInline ############
// BackendInline fail for  in:cos(time)
//
// BackendInline fail for  in:der(y)
//
// BackendInline
// start: $$Pfoo$Pf1
// function body: $$Pfoo$Pf1
// unknown partition
// ========================================
//
// Variables (3)
// ========================================
// 1: x$$Pfoo$Pf10:VARIABLE()  type: Real
// 2: y1$$Pfoo$Pf11:VARIABLE()  type: Real
// 3: z$$Pfoo$Pf12:VARIABLE()  type: Real
//
//
// Equations (3, 3)
// ========================================
// 1/1 (1): y1$$Pfoo$Pf11 = 7.0 + 2.0 * y   [unknown]
// 2/2 (1): z$$Pfoo$Pf12 = 2.0 * y1   [unknown]
// 3/3 (1): x = 0.1 * sqrt(z ^ 2.0 * y1 * y) / y1   [unknown]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
// function body replace body: $$Pfoo$Pf1
// unknown partition
// ========================================
//
// Variables (3)
// ========================================
// 1: x$$Pfoo$Pf10:VARIABLE()  type: Real
// 2: y1$$Pfoo$Pf11:VARIABLE()  type: Real
// 3: z$$Pfoo$Pf12:VARIABLE()  type: Real
//
//
// Equations (3, 3)
// ========================================
// 1/1 (1): x$$Pfoo$Pf10 = 0.1 * sqrt(z$$Pfoo$Pf12 ^ 2.0 * y1$$Pfoo$Pf11 * y) / y1$$Pfoo$Pf11   [unknown]
// 2/2 (1): z$$Pfoo$Pf12 = 2.0 * y1$$Pfoo$Pf11   [unknown]
// 3/3 (1): y1$$Pfoo$Pf11 = 7.0 + 2.0 * y   [unknown]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
// function replaced arguments: $$Pfoo$Pf1
// unknown partition
// ========================================
//
// Variables (3)
// ========================================
// 1: x$$Pfoo$Pf10:VARIABLE()  type: Real
// 2: y1$$Pfoo$Pf11:VARIABLE()  type: Real
// 3: z$$Pfoo$Pf12:VARIABLE()  type: Real
//
//
// Equations (3, 3)
// ========================================
// 1/1 (1): x$$Pfoo$Pf10 = 0.1 * sqrt(z$$Pfoo$Pf12 ^ 2.0 * y1$$Pfoo$Pf11 * z) / y1$$Pfoo$Pf11   [unknown]
// 2/2 (1): z$$Pfoo$Pf12 = 2.0 * y1$$Pfoo$Pf11   [unknown]
// 3/3 (1): y1$$Pfoo$Pf11 = 7.0 + 2.0 * z   [unknown]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// no matching
//
// Inline Function $$Pfoo$Pf1 type:  "Inline before index reduction"
// outExp:x$$Pfoo$Pf10
//
// inEquation:1.0 + der(y) = foo.f1(z)
//
// out Equation:1.0 + der(y) = x$$Pfoo$Pf10
//
// BackendInline fail for  in:cos(time)
//
// BackendInline fail for  in:der(y)
//
// BackendInline fail for  in:sqrt(z$$Pfoo$Pf12 ^ 2.0 * y1$$Pfoo$Pf11 * z)
//
// ########################################
// Result DAE after Inline. (1 partitions)
// ########################################
//
//
// unknown partition
// ========================================
//
// Variables (5)
// ========================================
// 1: x$$Pfoo$Pf10:VARIABLE()  type: Real
// 2: y1$$Pfoo$Pf11:VARIABLE()  type: Real
// 3: z$$Pfoo$Pf12:VARIABLE()  type: Real
// 4: z:VARIABLE() .foo, .Real type: Real
// 5: y:STATE(1)(start = 0.0 fixed = true ) .foo, .Real type: Real
//
//
// Equations (5, 5)
// ========================================
// 1/1 (1): z = cos(time)   [binding]
// 2/2 (1): 1.0 + der(y) = x$$Pfoo$Pf10   [dynamic]
// 3/3 (1): x$$Pfoo$Pf10 = 0.1 * sqrt(z$$Pfoo$Pf12 ^ 2.0 * y1$$Pfoo$Pf11 * z) / y1$$Pfoo$Pf11   [unknown]
// 4/4 (1): z$$Pfoo$Pf12 = 2.0 * y1$$Pfoo$Pf11   [unknown]
// 5/5 (1): y1$$Pfoo$Pf11 = 7.0 + 2.0 * z   [unknown]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// Incidence Matrix (row: equation)
// ========================================
// number of rows: 2
// 1: 1
// 2: 1 2
//
// Transposed Incidence Matrix (row: variable)
// ========================================
// number of rows: 2
// 1: 2 1
// 2: 2
//
// no matching
//
//
// record SimulationResult
//     resultFile = "foo_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'foo', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// {0.0,0.5,1.0}
// {0.0,-0.2076159475509919,-0.4606878908673863}
// endResult
