// name: inlineArray1
// status: correct

// use new inline method
setCommandLineOptions("+inlineMethod=append");

loadString("
model foo
  function f
    input Real[5] x;
    output Real[7] y;
  protected
    Real sumx = exp(-sqrt(abs(sum(x))));
	Real tmpy;
  algorithm
    y[1] := sumx^2;
	y[2] := 2*sumx^2;
	y[3] := 3*sumx^2;
	y[4] := 4*sumx^2;
	y[5] := 5*sumx^2;
	y[6] := 6*sumx^2;
	tmpy := 7*sumx^2;
	y[7] := exp(-sqrt(abs(tmpy/sum(y[i] for i in 1:6)))/tmpy);
    annotation(Inline=true); 
  end f;
  Real y(fixed = true, start = 0);
protected
  Real[5] a;
  Real c;

  Real[5] x;
  Real[:] z = {i*sin(time) + 1 for i in 1:10};
equation
   x[1] = a[1] + a[2];
   x[2] = z[1] + a[1];
   x[3] = z[2] + a[3] + a[1] + 2*a[2] + sum(z);
   x[4] = z[2] + a[3] + a[1] + 2*a[2];
   x[5] = z[2] + x[3] + a[1] + 2*a[2] + cos(sum(a));
   a[1] = sum(f(x))/10;
   a[2] = sum(f(z[1:5]))/10;
   a[3] = sum(f(z[6:10]))/10;
   a[4] = sum(f(z[2:6]))/10;
   a[5] = sum(f(z[3:7]))/10;
   c = exp(-sum(f(a)));
   der(y) = sin(c) - cos(sum(f(x))) + sum(a)/10;  
end foo;
");
getErrorString();

setCommandLineOptions("+d=dumpBackendInline");
getErrorString();
simulate(foo);
getErrorString();
val(y,{0,0.5,1.0}); // 0, -1

// Result:
// true
// true
// ""
// true
// ""
//
// ############ BackendInline Method: append ############
// ########################################
// Result DAE after Inline. (1 partitions)
// ########################################
//
//
// unknown partition
// ========================================
//
// Variables (85)
// ========================================
// 1: y$$Pfoo$Pf26[1]:VARIABLE()  type: Real [7]
// 2: y$$Pfoo$Pf26[2]:VARIABLE()  type: Real [7]
// 3: y$$Pfoo$Pf26[3]:VARIABLE()  type: Real [7]
// 4: y$$Pfoo$Pf26[4]:VARIABLE()  type: Real [7]
// 5: y$$Pfoo$Pf26[5]:VARIABLE()  type: Real [7]
// 6: y$$Pfoo$Pf26[6]:VARIABLE()  type: Real [7]
// 7: y$$Pfoo$Pf26[7]:VARIABLE()  type: Real [7]
// 8: tmpy$$Pfoo$Pf27:VARIABLE()  type: Real
// 9: sumx$$Pfoo$Pf28:VARIABLE()  type: Real
// 10: y$$Pfoo$Pf23[1]:VARIABLE()  type: Real [7]
// 11: y$$Pfoo$Pf23[2]:VARIABLE()  type: Real [7]
// 12: y$$Pfoo$Pf23[3]:VARIABLE()  type: Real [7]
// 13: y$$Pfoo$Pf23[4]:VARIABLE()  type: Real [7]
// 14: y$$Pfoo$Pf23[5]:VARIABLE()  type: Real [7]
// 15: y$$Pfoo$Pf23[6]:VARIABLE()  type: Real [7]
// 16: y$$Pfoo$Pf23[7]:VARIABLE()  type: Real [7]
// 17: tmpy$$Pfoo$Pf24:VARIABLE()  type: Real
// 18: sumx$$Pfoo$Pf25:VARIABLE()  type: Real
// 19: y$$Pfoo$Pf20[1]:VARIABLE()  type: Real [7]
// 20: y$$Pfoo$Pf20[2]:VARIABLE()  type: Real [7]
// 21: y$$Pfoo$Pf20[3]:VARIABLE()  type: Real [7]
// 22: y$$Pfoo$Pf20[4]:VARIABLE()  type: Real [7]
// 23: y$$Pfoo$Pf20[5]:VARIABLE()  type: Real [7]
// 24: y$$Pfoo$Pf20[6]:VARIABLE()  type: Real [7]
// 25: y$$Pfoo$Pf20[7]:VARIABLE()  type: Real [7]
// 26: tmpy$$Pfoo$Pf21:VARIABLE()  type: Real
// 27: sumx$$Pfoo$Pf22:VARIABLE()  type: Real
// 28: y$$Pfoo$Pf17[1]:VARIABLE()  type: Real [7]
// 29: y$$Pfoo$Pf17[2]:VARIABLE()  type: Real [7]
// 30: y$$Pfoo$Pf17[3]:VARIABLE()  type: Real [7]
// 31: y$$Pfoo$Pf17[4]:VARIABLE()  type: Real [7]
// 32: y$$Pfoo$Pf17[5]:VARIABLE()  type: Real [7]
// 33: y$$Pfoo$Pf17[6]:VARIABLE()  type: Real [7]
// 34: y$$Pfoo$Pf17[7]:VARIABLE()  type: Real [7]
// 35: tmpy$$Pfoo$Pf18:VARIABLE()  type: Real
// 36: sumx$$Pfoo$Pf19:VARIABLE()  type: Real
// 37: y$$Pfoo$Pf14[1]:VARIABLE()  type: Real [7]
// 38: y$$Pfoo$Pf14[2]:VARIABLE()  type: Real [7]
// 39: y$$Pfoo$Pf14[3]:VARIABLE()  type: Real [7]
// 40: y$$Pfoo$Pf14[4]:VARIABLE()  type: Real [7]
// 41: y$$Pfoo$Pf14[5]:VARIABLE()  type: Real [7]
// 42: y$$Pfoo$Pf14[6]:VARIABLE()  type: Real [7]
// 43: y$$Pfoo$Pf14[7]:VARIABLE()  type: Real [7]
// 44: tmpy$$Pfoo$Pf15:VARIABLE()  type: Real
// 45: sumx$$Pfoo$Pf16:VARIABLE()  type: Real
// 46: y$$Pfoo$Pf11[1]:VARIABLE()  type: Real [7]
// 47: y$$Pfoo$Pf11[2]:VARIABLE()  type: Real [7]
// 48: y$$Pfoo$Pf11[3]:VARIABLE()  type: Real [7]
// 49: y$$Pfoo$Pf11[4]:VARIABLE()  type: Real [7]
// 50: y$$Pfoo$Pf11[5]:VARIABLE()  type: Real [7]
// 51: y$$Pfoo$Pf11[6]:VARIABLE()  type: Real [7]
// 52: y$$Pfoo$Pf11[7]:VARIABLE()  type: Real [7]
// 53: tmpy$$Pfoo$Pf12:VARIABLE()  type: Real
// 54: sumx$$Pfoo$Pf13:VARIABLE()  type: Real
// 55: y$$Pfoo$Pf8[1]:VARIABLE()  type: Real [7]
// 56: y$$Pfoo$Pf8[2]:VARIABLE()  type: Real [7]
// 57: y$$Pfoo$Pf8[3]:VARIABLE()  type: Real [7]
// 58: y$$Pfoo$Pf8[4]:VARIABLE()  type: Real [7]
// 59: y$$Pfoo$Pf8[5]:VARIABLE()  type: Real [7]
// 60: y$$Pfoo$Pf8[6]:VARIABLE()  type: Real [7]
// 61: y$$Pfoo$Pf8[7]:VARIABLE()  type: Real [7]
// 62: tmpy$$Pfoo$Pf9:VARIABLE()  type: Real
// 63: sumx$$Pfoo$Pf10:VARIABLE()  type: Real
// 64: z[10]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 65: z[9]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 66: z[8]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 67: z[7]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 68: z[6]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 69: z[5]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 70: z[4]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 71: z[3]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 72: z[2]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 73: z[1]:VARIABLE(protected = true ) .foo, .Real type: Real [10]
// 74: x[5]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 75: x[4]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 76: x[3]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 77: x[2]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 78: x[1]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 79: c:VARIABLE(protected = true ) .foo, .Real type: Real
// 80: a[5]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 81: a[4]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 82: a[3]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 83: a[2]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 84: a[1]:VARIABLE(protected = true ) .foo, .Real type: Real [5]
// 85: y:STATE(1)(start = 0.0 fixed = true ) .foo, .Real type: Real
//
//
// Equations (76, 85)
// ========================================
// 1/1 (10): z = {1.0 + sin(time), 1.0 + 2.0 * sin(time), 1.0 + 3.0 * sin(time), 1.0 + 4.0 * sin(time), 1.0 + 5.0 * sin(time), 1.0 + 6.0 * sin(time), 1.0 + 7.0 * sin(time), 1.0 + 8.0 * sin(time), 1.0 + 9.0 * sin(time), 1.0 + 10.0 * sin(time)}   [dynamic]
// 2/11 (1): x[1] = a[1] + a[2]   [dynamic]
// 3/12 (1): x[2] = z[1] + a[1]   [dynamic]
// 4/13 (1): x[3] = 2.0 * z[2] + a[3] + a[1] + 2.0 * a[2] + z[1] + z[3] + z[4] + z[5] + z[6] + z[7] + z[8] + z[9] + z[10]   [dynamic]
// 5/14 (1): x[4] = z[2] + a[3] + a[1] + 2.0 * a[2]   [dynamic]
// 6/15 (1): x[5] = z[2] + x[3] + a[1] + 2.0 * a[2] + cos(a[1] + a[2] + a[3] + a[4] + a[5])   [dynamic]
// 7/16 (1): a[1] = 0.1 * sum(y$$Pfoo$Pf8)   [dynamic]
// 8/17 (1): a[2] = 0.1 * sum(y$$Pfoo$Pf11)   [dynamic]
// 9/18 (1): a[3] = 0.1 * sum(y$$Pfoo$Pf14)   [dynamic]
// 10/19 (1): a[4] = 0.1 * sum(y$$Pfoo$Pf17)   [dynamic]
// 11/20 (1): a[5] = 0.1 * sum(y$$Pfoo$Pf20)   [dynamic]
// 12/21 (1): c = exp(-sum(y$$Pfoo$Pf23))   [dynamic]
// 13/22 (1): der(y) = sin(c) + 0.1 * (a[1] + a[2] + a[3] + a[4] + a[5]) - cos(sum(y$$Pfoo$Pf26))   [dynamic]
// 14/23 (1): y$$Pfoo$Pf8[7] = exp((-sqrt(abs(tmpy$$Pfoo$Pf9 / (y$$Pfoo$Pf8[1] + y$$Pfoo$Pf8[2] + y$$Pfoo$Pf8[3] + y$$Pfoo$Pf8[4] + y$$Pfoo$Pf8[5] + y$$Pfoo$Pf8[6])))) / tmpy$$Pfoo$Pf9)   [unknown]
// 15/24 (1): tmpy$$Pfoo$Pf9 = 7.0 * sumx$$Pfoo$Pf10 ^ 2.0   [unknown]
// 16/25 (1): y$$Pfoo$Pf8[6] = 6.0 * sumx$$Pfoo$Pf10 ^ 2.0   [unknown]
// 17/26 (1): y$$Pfoo$Pf8[5] = 5.0 * sumx$$Pfoo$Pf10 ^ 2.0   [unknown]
// 18/27 (1): y$$Pfoo$Pf8[4] = 4.0 * sumx$$Pfoo$Pf10 ^ 2.0   [unknown]
// 19/28 (1): y$$Pfoo$Pf8[3] = 3.0 * sumx$$Pfoo$Pf10 ^ 2.0   [unknown]
// 20/29 (1): y$$Pfoo$Pf8[2] = 2.0 * sumx$$Pfoo$Pf10 ^ 2.0   [unknown]
// 21/30 (1): y$$Pfoo$Pf8[1] = sumx$$Pfoo$Pf10 ^ 2.0   [unknown]
// 22/31 (1): sumx$$Pfoo$Pf10 = exp(-sqrt(abs(x[1] + x[2] + x[3] + x[4] + x[5])))   [unknown]
// 23/32 (1): y$$Pfoo$Pf11[7] = exp((-sqrt(abs(tmpy$$Pfoo$Pf12 / (y$$Pfoo$Pf11[1] + y$$Pfoo$Pf11[2] + y$$Pfoo$Pf11[3] + y$$Pfoo$Pf11[4] + y$$Pfoo$Pf11[5] + y$$Pfoo$Pf11[6])))) / tmpy$$Pfoo$Pf12)   [unknown]
// 24/33 (1): tmpy$$Pfoo$Pf12 = 7.0 * sumx$$Pfoo$Pf13 ^ 2.0   [unknown]
// 25/34 (1): y$$Pfoo$Pf11[6] = 6.0 * sumx$$Pfoo$Pf13 ^ 2.0   [unknown]
// 26/35 (1): y$$Pfoo$Pf11[5] = 5.0 * sumx$$Pfoo$Pf13 ^ 2.0   [unknown]
// 27/36 (1): y$$Pfoo$Pf11[4] = 4.0 * sumx$$Pfoo$Pf13 ^ 2.0   [unknown]
// 28/37 (1): y$$Pfoo$Pf11[3] = 3.0 * sumx$$Pfoo$Pf13 ^ 2.0   [unknown]
// 29/38 (1): y$$Pfoo$Pf11[2] = 2.0 * sumx$$Pfoo$Pf13 ^ 2.0   [unknown]
// 30/39 (1): y$$Pfoo$Pf11[1] = sumx$$Pfoo$Pf13 ^ 2.0   [unknown]
// 31/40 (1): sumx$$Pfoo$Pf13 = exp(-sqrt(abs(z[1] + z[2] + z[3] + z[4] + z[5])))   [unknown]
// 32/41 (1): y$$Pfoo$Pf14[7] = exp((-sqrt(abs(tmpy$$Pfoo$Pf15 / (y$$Pfoo$Pf14[1] + y$$Pfoo$Pf14[2] + y$$Pfoo$Pf14[3] + y$$Pfoo$Pf14[4] + y$$Pfoo$Pf14[5] + y$$Pfoo$Pf14[6])))) / tmpy$$Pfoo$Pf15)   [unknown]
// 33/42 (1): tmpy$$Pfoo$Pf15 = 7.0 * sumx$$Pfoo$Pf16 ^ 2.0   [unknown]
// 34/43 (1): y$$Pfoo$Pf14[6] = 6.0 * sumx$$Pfoo$Pf16 ^ 2.0   [unknown]
// 35/44 (1): y$$Pfoo$Pf14[5] = 5.0 * sumx$$Pfoo$Pf16 ^ 2.0   [unknown]
// 36/45 (1): y$$Pfoo$Pf14[4] = 4.0 * sumx$$Pfoo$Pf16 ^ 2.0   [unknown]
// 37/46 (1): y$$Pfoo$Pf14[3] = 3.0 * sumx$$Pfoo$Pf16 ^ 2.0   [unknown]
// 38/47 (1): y$$Pfoo$Pf14[2] = 2.0 * sumx$$Pfoo$Pf16 ^ 2.0   [unknown]
// 39/48 (1): y$$Pfoo$Pf14[1] = sumx$$Pfoo$Pf16 ^ 2.0   [unknown]
// 40/49 (1): sumx$$Pfoo$Pf16 = exp(-sqrt(abs(z[6] + z[7] + z[8] + z[9] + z[10])))   [unknown]
// 41/50 (1): y$$Pfoo$Pf17[7] = exp((-sqrt(abs(tmpy$$Pfoo$Pf18 / (y$$Pfoo$Pf17[1] + y$$Pfoo$Pf17[2] + y$$Pfoo$Pf17[3] + y$$Pfoo$Pf17[4] + y$$Pfoo$Pf17[5] + y$$Pfoo$Pf17[6])))) / tmpy$$Pfoo$Pf18)   [unknown]
// 42/51 (1): tmpy$$Pfoo$Pf18 = 7.0 * sumx$$Pfoo$Pf19 ^ 2.0   [unknown]
// 43/52 (1): y$$Pfoo$Pf17[6] = 6.0 * sumx$$Pfoo$Pf19 ^ 2.0   [unknown]
// 44/53 (1): y$$Pfoo$Pf17[5] = 5.0 * sumx$$Pfoo$Pf19 ^ 2.0   [unknown]
// 45/54 (1): y$$Pfoo$Pf17[4] = 4.0 * sumx$$Pfoo$Pf19 ^ 2.0   [unknown]
// 46/55 (1): y$$Pfoo$Pf17[3] = 3.0 * sumx$$Pfoo$Pf19 ^ 2.0   [unknown]
// 47/56 (1): y$$Pfoo$Pf17[2] = 2.0 * sumx$$Pfoo$Pf19 ^ 2.0   [unknown]
// 48/57 (1): y$$Pfoo$Pf17[1] = sumx$$Pfoo$Pf19 ^ 2.0   [unknown]
// 49/58 (1): sumx$$Pfoo$Pf19 = exp(-sqrt(abs(z[2] + z[3] + z[4] + z[5] + z[6])))   [unknown]
// 50/59 (1): y$$Pfoo$Pf20[7] = exp((-sqrt(abs(tmpy$$Pfoo$Pf21 / (y$$Pfoo$Pf20[1] + y$$Pfoo$Pf20[2] + y$$Pfoo$Pf20[3] + y$$Pfoo$Pf20[4] + y$$Pfoo$Pf20[5] + y$$Pfoo$Pf20[6])))) / tmpy$$Pfoo$Pf21)   [unknown]
// 51/60 (1): tmpy$$Pfoo$Pf21 = 7.0 * sumx$$Pfoo$Pf22 ^ 2.0   [unknown]
// 52/61 (1): y$$Pfoo$Pf20[6] = 6.0 * sumx$$Pfoo$Pf22 ^ 2.0   [unknown]
// 53/62 (1): y$$Pfoo$Pf20[5] = 5.0 * sumx$$Pfoo$Pf22 ^ 2.0   [unknown]
// 54/63 (1): y$$Pfoo$Pf20[4] = 4.0 * sumx$$Pfoo$Pf22 ^ 2.0   [unknown]
// 55/64 (1): y$$Pfoo$Pf20[3] = 3.0 * sumx$$Pfoo$Pf22 ^ 2.0   [unknown]
// 56/65 (1): y$$Pfoo$Pf20[2] = 2.0 * sumx$$Pfoo$Pf22 ^ 2.0   [unknown]
// 57/66 (1): y$$Pfoo$Pf20[1] = sumx$$Pfoo$Pf22 ^ 2.0   [unknown]
// 58/67 (1): sumx$$Pfoo$Pf22 = exp(-sqrt(abs(z[3] + z[4] + z[5] + z[6] + z[7])))   [unknown]
// 59/68 (1): y$$Pfoo$Pf23[7] = exp((-sqrt(abs(tmpy$$Pfoo$Pf24 / (y$$Pfoo$Pf23[1] + y$$Pfoo$Pf23[2] + y$$Pfoo$Pf23[3] + y$$Pfoo$Pf23[4] + y$$Pfoo$Pf23[5] + y$$Pfoo$Pf23[6])))) / tmpy$$Pfoo$Pf24)   [unknown]
// 60/69 (1): tmpy$$Pfoo$Pf24 = 7.0 * sumx$$Pfoo$Pf25 ^ 2.0   [unknown]
// 61/70 (1): y$$Pfoo$Pf23[6] = 6.0 * sumx$$Pfoo$Pf25 ^ 2.0   [unknown]
// 62/71 (1): y$$Pfoo$Pf23[5] = 5.0 * sumx$$Pfoo$Pf25 ^ 2.0   [unknown]
// 63/72 (1): y$$Pfoo$Pf23[4] = 4.0 * sumx$$Pfoo$Pf25 ^ 2.0   [unknown]
// 64/73 (1): y$$Pfoo$Pf23[3] = 3.0 * sumx$$Pfoo$Pf25 ^ 2.0   [unknown]
// 65/74 (1): y$$Pfoo$Pf23[2] = 2.0 * sumx$$Pfoo$Pf25 ^ 2.0   [unknown]
// 66/75 (1): y$$Pfoo$Pf23[1] = sumx$$Pfoo$Pf25 ^ 2.0   [unknown]
// 67/76 (1): sumx$$Pfoo$Pf25 = exp(-sqrt(abs(a[1] + a[2] + a[3] + a[4] + a[5])))   [unknown]
// 68/77 (1): y$$Pfoo$Pf26[7] = exp((-sqrt(abs(tmpy$$Pfoo$Pf27 / (y$$Pfoo$Pf26[1] + y$$Pfoo$Pf26[2] + y$$Pfoo$Pf26[3] + y$$Pfoo$Pf26[4] + y$$Pfoo$Pf26[5] + y$$Pfoo$Pf26[6])))) / tmpy$$Pfoo$Pf27)   [unknown]
// 69/78 (1): tmpy$$Pfoo$Pf27 = 7.0 * sumx$$Pfoo$Pf28 ^ 2.0   [unknown]
// 70/79 (1): y$$Pfoo$Pf26[6] = 6.0 * sumx$$Pfoo$Pf28 ^ 2.0   [unknown]
// 71/80 (1): y$$Pfoo$Pf26[5] = 5.0 * sumx$$Pfoo$Pf28 ^ 2.0   [unknown]
// 72/81 (1): y$$Pfoo$Pf26[4] = 4.0 * sumx$$Pfoo$Pf28 ^ 2.0   [unknown]
// 73/82 (1): y$$Pfoo$Pf26[3] = 3.0 * sumx$$Pfoo$Pf28 ^ 2.0   [unknown]
// 74/83 (1): y$$Pfoo$Pf26[2] = 2.0 * sumx$$Pfoo$Pf28 ^ 2.0   [unknown]
// 75/84 (1): y$$Pfoo$Pf26[1] = sumx$$Pfoo$Pf28 ^ 2.0   [unknown]
// 76/85 (1): sumx$$Pfoo$Pf28 = exp(-sqrt(abs(x[1] + x[2] + x[3] + x[4] + x[5])))   [unknown]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// Incidence Matrix (row: equation)
// ========================================
// number of rows: 13
// 1: 10 9 8 7 6 5 4 3 2 1
// 2: 20 21 15
// 3: 21 10 14
// 4: 1 2 3 4 5 6 7 8 10 20 21 19 9 13
// 5: 20 21 19 9 12
// 6: 17 18 19 20 21 13 9 11
// 7: 11 12 13 14 15 21
// 8: 6 7 8 9 10 20
// 9: 1 2 3 4 5 19
// 10: 5 6 7 8 9 18
// 11: 4 5 6 7 8 17
// 12: 17 18 19 20 21 16
// 13: 11 12 13 14 15 17 18 19 20 21 16 22
//
// Transposed Incidence Matrix (row: variable)
// ========================================
// number of rows: 22
// 1: 9 4 1
// 2: 9 4 1
// 3: 9 4 1
// 4: 11 9 4 1
// 5: 11 10 9 4 1
// 6: 11 10 8 4 1
// 7: 11 10 8 4 1
// 8: 11 10 8 4 1
// 9: 10 8 6 5 4 1
// 10: 8 4 3 1
// 11: 13 7 6
// 12: 13 7 5
// 13: 13 7 6 4
// 14: 13 7 3
// 15: 13 7 2
// 16: 13 12
// 17: 13 12 11 6
// 18: 13 12 10 6
// 19: 13 12 9 6 5 4
// 20: 13 12 8 6 5 4 2
// 21: 13 12 7 6 5 4 3 2
// 22: 13
//
// no matching
//
//
// record SimulationResult
//     resultFile = "foo_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'foo', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: There are iteration variables with default zero start attribute. Use +d=initialization for more information.
// "
// {0.0,-0.4988765881077395,-0.9987937622066468}
// endResult
