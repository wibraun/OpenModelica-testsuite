// name: inlineArray1
// status: correct

loadString("
model foo
  function f
    input Real[5] x;
    output Real[7] y;
  protected
    Real sumx = exp(-sqrt(sum(x)));
	Real tmpy;
  algorithm
    y[1] := sumx^2;
	y[2] := 2*sumx^2;
	y[3] := 3*sumx^2;
	y[4] := 4*sumx^2;
	y[5] := 5*sumx^2;
	y[6] := 6*sumx^2;
	tmpy := 7*sumx^2;
	y[7] := exp(-sqrt(tmpy/sum(y[i] for i in 1:6))/tmpy);
    annotation(Inline=true); 
  end f;
  Real y(fixed = true, start = 0);
protected
  Real[5] a;
  Real c;

  Real[5] x;
  Real[:] z = {i*sin(time) + 1 for i in 1:10};
equation
   x[1] = a[1] + a[2];
   x[2] = z[1] + a[1];
   x[3] = z[2] + a[3] + a[1] + 2*a[2] + sum(z);
   x[4] = z[2] + a[3] + a[1] + 2*a[2];
   x[5] = z[2] + x[3] + a[1] + 2*a[2] + cos(sum(a));
   a[1] = sum(f(x))/10;
   a[2] = sum(f(z[1:5]))/10;
   a[3] = sum(f(z[6:10]))/10;
   a[4] = sum(f(z[2:6]))/10;
   a[5] = sum(f(z[3:7]))/10;
   c = exp(-sum(f(a)));
   der(y) = sin(c) - cos(sum(f(x))) + sum(a)/10;  
end foo;
");
getErrorString();

setCommandLineOptions("+d=dumpBackendInline");
getErrorString();
simulate(foo);
getErrorString();
val(y,{0,0.5,1.0}); // 0, -1