// name: testADOLC2
// status: correct
// teardown_command: rm -f adolcTest* output.log

loadString("
  model adolcTest
    Real x,y;
    function f
      input Real x;
      output Real y;
    protected 
      //Real w = sin(3.14);
    algorithm
      y := x*sin(x);
    end f;
  equation
    y = f(x);
    der(x) = y+time;
  end adolcTest;
");
getErrorString();


setCommandLineOptions("--adolcTrace");
getErrorString();

simulate(adolcTest, simflags="-jacobian=adolc");
getErrorString();

simulate(adolcTest, simflags="-jacobian=adolcSparse");
getErrorString();


// Result:
// true
// ""
// true
// ""
// createOperationData equations input: 
// <equation index="4">
//   <assign>
//     <defines name="y"/>
//     <depends name="x" />
//     <rhs>adolcTest.f(x)</rhs>
//   </assign>
// </equation>
// <equation index="5">
//   <assign>
//     <defines name="der(x)"/>
//     <depends name="time" />
//     <depends name="y" />
//     <rhs>y + time</rhs>
//   </assign>
// </equation>
//  start STMT_ASSIGN for y
// Done with collectOperationsForExp
//  ops: result: VAR(y 1) : mult_a_a ? VAR(x 0)  VAR($tmpOpVar_3 3)  
// ### OpeartionData : adolcTest###
// 1 result: VAR($tmpOpVar_3 3) : assign_a ? VAR(x 0)  
// 2 result: VAR(y 2) : call fname:"_adolcTest_f_aat.txt" ? VAR($tmpOpVar_3 3)  INDEX: 1 INDEX: 1 
// 3 result: VAR($tmpOpVar_3 3) : assign_p ? TIME 
// 4 result: VAR($DER.x 1) : plus_a_a ? VAR(y 2)  VAR($tmpOpVar_3 3)  
// ### OpeartionData : _adolcTest_f###
// 5 result: VAR($tmpOpVar_3 3) : sin_op ? VAR(x 0)  VAR($tmpOpVar_2 2)  
// 6 result: VAR(y 1) : mult_a_a ? VAR(x 0)  VAR($tmpOpVar_3 3)  
// record SimulationResult
//     resultFile = "adolcTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'adolcTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-jacobian=adolc'",
//     messages = "creating subtrace : tag(1), file = _adolcTest_f_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// createOperationData equations input: 
// <equation index="4">
//   <assign>
//     <defines name="y"/>
//     <depends name="x" />
//     <rhs>adolcTest.f(x)</rhs>
//   </assign>
// </equation>
// <equation index="5">
//   <assign>
//     <defines name="der(x)"/>
//     <depends name="time" />
//     <depends name="y" />
//     <rhs>y + time</rhs>
//   </assign>
// </equation>
//  start STMT_ASSIGN for y
// Done with collectOperationsForExp
//  ops: result: VAR(y 1) : mult_a_a ? VAR(x 0)  VAR($tmpOpVar_3 3)  
// ### OpeartionData : adolcTest###
// 1 result: VAR($tmpOpVar_3 3) : assign_a ? VAR(x 0)  
// 2 result: VAR(y 2) : call fname:"_adolcTest_f_aat.txt" ? VAR($tmpOpVar_3 3)  INDEX: 1 INDEX: 1 
// 3 result: VAR($tmpOpVar_3 3) : assign_p ? TIME 
// 4 result: VAR($DER.x 1) : plus_a_a ? VAR(y 2)  VAR($tmpOpVar_3 3)  
// ### OpeartionData : _adolcTest_f###
// 5 result: VAR($tmpOpVar_3 3) : sin_op ? VAR(x 0)  VAR($tmpOpVar_2 2)  
// 6 result: VAR(y 1) : mult_a_a ? VAR(x 0)  VAR($tmpOpVar_3 3)  
// record SimulationResult
//     resultFile = "",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'adolcTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-jacobian=adolcSparse'",
//     messages = "Simulation execution failed for model: adolcTest
// creating subtrace : tag(1), file = _adolcTest_f_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C fatal error in indopro_forward_t (./uni5_for.c) : no such operation 59
// terminate called after throwing an instance of 'FatalError'
//   what():  errorcode=-1 function=indopro_forward_tight file=./uni5_for.c line=6563 what=
// Aborted (core dumped)
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// endResult
